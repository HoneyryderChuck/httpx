module HTTPX
  module Plugins
    module ResponseCache
      CACHEABLE_VERBS: Array[Symbol]

      def self?.cacheable_request?: (Request request) -> bool
      def self?.cacheable_response?: (response response) -> bool
      def self?.cached_response?: (response response) -> bool

      class Store
        @store: Hash[String, Response]

        def lookup: (Request request) -> Response?

        def cached?: (Request request) -> bool

        def cache: (Request request, Response response) -> void

        def prepare: (Request request) -> void
      end

      module InstanceMethods
        @response_cache: Store

        def clear_response_cache: () -> void
      end

      module RequestMethods
        def response_cache_key: () -> String
      end

      module ResponseMethods
        def copy_from_cached: (Response other) -> void
      end
    end

    type sessionResponseCache = Session & ResponseCache::InstanceMethods
  end
end