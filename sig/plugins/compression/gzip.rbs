module HTTPX
  module Plugins
    module Compression
      module GZIP
        def self.load_dependencies: (singleton(Session)) -> void
        def self.configure: (singleton(Session)) -> void

        def self?.deflater: () -> _Deflater
        def self?.inflater: (Numeric bytesize) -> Inflater

        class Deflater
          include _Deflater

          @compressed_chunk: String
          
          private
          
          def initialize: () -> untyped
          def write: (string) -> void
          def compressed_chunk: () -> String
        end

        class Inflater
          include _Inflater
        end
      end
    end
  end
end
