module HTTPX
  class HTTPProxyError < Error
  end

  module Plugins
    module Proxy
      Error: singleton(HTTPProxyError)
      PROXY_ERRORS: Array[singleton(StandardError)]

      class Parameters
        attr_reader uri: URI::Generic
        attr_reader username: String?
        attr_reader password: String?
        attr_reader scheme: String?

        def can_authenticate?: (*untyped) -> boolish

        def authenticate: (*untyped) -> String?

        def ==: (untyped) -> bool

        private

        def initialize: (uri: generic_uri, ?scheme: String, ?username: String, ?password: String, **untyped) -> untyped
      end

      def self.configure: (singleton(Session)) -> void

      type proxyParam = Parameters | Hash[Symbol, untyped]

      interface _ProxyOptions
        def proxy: () -> proxyParam?
      end

      def self.extra_options: (Options) -> (Options & _ProxyOptions)

      module InstanceMethods
        @__proxy_uris: Array[generic_uri]
      end
    end

    type sessionProxy = Session & Proxy::InstanceMethods
  end
end
