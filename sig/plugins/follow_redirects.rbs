module HTTPX
  InsecureRedirectError: singleton(Error)

  module Plugins
    module FollowRedirects
      MAX_REDIRECTS: Integer
      REDIRECT_STATUS: Range[Integer]
      REQUEST_BODY_HEADERS: Array[String]

      type redirect_request = Request & RequestMethods

      interface _FollowRedirectsOptions
        def max_redirects: () -> Integer?

        def follow_insecure_redirects: () -> bool?

        def allow_auth_to_other_origins: () -> bool?

        def redirect_on: () -> (^(http_uri) -> boolish | nil)
      end

      def self.extra_options: (Options) -> (Options & _FollowRedirectsOptions)

      module InstanceMethods
        def max_redirects: (_ToI) -> instance

        def redirect_request_headers: (http_uri original_uri, http_uri redirect_uri, Headers headers, Options & _FollowRedirectsOptions options) -> Headers

        def __get_location_from_response: (Response) -> http_uri
      end

      module RequestMethods
        attr_accessor root_request: instance?

        @redirect_request: redirect_request

        def redirect_request: () -> redirect_request

        def redirect_request=: (redirect_request req) -> void

        def max_redirects: () -> Integer
      end
    end

    type sessionFollowRedirects = Session & FollowRedirects::InstanceMethods
  end
end
