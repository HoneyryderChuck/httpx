module HTTPX
  module Resolver
    class Resolver
      include Callbacks
      include Loggable

      @_record_types: Hash[String, Hash["A" | "AAAA", dns_resource]]
      @queries: Hash[String, Connection]
      @system_resolver: Resolv::Hosts

      CHECK_IF_IP: ^(String name) -> bool

      def uncache: (Connection) -> void

      def close: () -> void

      def closed?: () -> bool

      def empty?: () -> bool

      private

      def emit_addresses: (Connection, Array[ipaddr]) -> void

      def early_resolve: (Connection, ?hostname: String) -> void

      def ip_resolve: (String hostname) -> Array[ipaddr]?

      def system_resolve: (String hostname) -> Array[ipaddr]?

      def emit_resolve_error: (Connection, ?String hostname, ?StandardError) -> void

      def resolve_error: (String hostname, ?StandardError?) -> void
    end
  end
end
