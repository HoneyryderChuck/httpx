module HTTPX
  module Resolver
    class HTTPS < Resolver
      NAMESERVER: String

      DEFAULTS: Hash[Symbol, untyped]
      FAMILY_TYPES: Hash[singleton(Resolv::DNS::Resource), String]

      @options: Options
      @requests: Hash[Request, Connection]
      @connections: Array[Connection]
      @uri: URI::Generic
      @uri_addresses: Array[String]?
      @resolver: Resolv::DNS
      @resolver_connection: Connection

      attr_writer pool: Pool

      def <<: (Connection) -> void

      private

      def resolver_connection: () -> Connection

      def resolve: (?Connection connection, ?String? hostname) -> void

      def on_response: (Request, response) -> void

      def parse: (Response response) -> void

      def build_request: (String hostname) -> Request

      def decode_response_body: (Response) -> Array[dns_result]
    end
  end
end