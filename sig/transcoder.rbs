module HTTPX
  type bodyIO = _Reader | _Each[String, untyped] | _ToS

  module Transcoder
    extend HTTPX::Registry[String, Class]

    def self.normalize_keys: (string | Symbol, top, ?Proc?) { (string, top) -> void } -> void
                           | (string | Symbol, top, ?Proc?) { (string) -> void } -> void

    interface _Encoder
      def bytesize: () -> Numeric
    end

    interface _Decoder
      def decode: (string) -> String
    end
  end
end
