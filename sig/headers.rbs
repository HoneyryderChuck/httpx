module HTTPX
  class Headers
    include _ToS

    @headers: Hash[String, Array[String]]

    def self.new: (?untyped headers) -> instance

    def ==: (untyped other) -> bool

    def []: (String field) -> String?
    def []=: (String field, headers_value value) -> void

    def add: (String field, string value) -> void
    def delete: (String field) -> Array[String]?

    def each: (?_Each[[String, String]]? extra_headers) { (String k, String v) -> void } -> void
            | (?_Each[[String, String]]? extra_headers) -> Enumerable[[String, String]]

    def get: (String field) -> Array[String]
    def key?: (String downcased_key) -> bool

    def merge: (_Each[[String, headers_value]] other) -> Headers

    def same_headers?: (untyped headers) -> bool

    def to_a: () -> Array[[String, String]]
    def to_hash: () -> Hash[String, String]
    alias to_h to_hash

    def inspect: () -> String

    private

    def initialize: (?headers?) -> untyped
    def array_value: (headers_value) -> Array[String]
    def downcased: (_ToS field) -> String
  end

  type headers_value = _ToS | Array[_ToS]
  type headers_hash = Hash[_ToS, headers_value]
  type headers_input = headers_hash | Array[[_ToS, string]]
  type headers = Headers | headers_input
end
