module HTTPX
  module Chainable
    def request: (*untyped, **untyped) -> (response | Array[response])
    def accept: (String) -> Session
    def wrap: () { (Session) -> void } -> void
            | () -> void

    def with: (options) -> Session
            | (options) { (Session) -> Session} -> Session




    def plugin: (:authentication) -> Plugins::sessionAuthentication
              | (:basic_authentication) -> Plugins::sessionBasicAuthentication
              | (:digest_authentication) -> Plugins::sessionDigestAuthentication
              | (:ntlm_authentication) -> Plugins::sessionNTLMAuthentication
              | (:aws_sdk_authentication) -> Plugins::sessionAwsSdkAuthentication
              | (:compression) -> Session
              | (:cookies) -> Plugins::sessionCookies
              | (:expect) -> Session
              | (:follow_redirects) -> Plugins::sessionFollowRedirects
              | (:upgrade) -> Session
              | (:h2c) -> Session
              | (:multipart) -> Session
              | (:persistent) -> Plugins::sessionPersistent
              | (:proxy) -> Plugins::sessionProxy
              | (:push_promise) -> Plugins::sessionPushPromise
              | (:retries) -> Plugins::sessionRetries
              | (:rate_limiter) -> Session
              | (:stream) -> Plugins::sessionStream
              | (:aws_sigv4) -> Plugins::awsSigV4Session
              | (:grpc) -> Plugins::grpcSession
              | (Symbol | Module, ?options?) { (Class) -> void } -> Session
              | (Symbol | Module, ?options?) -> Session

    private

    def default_options: () -> Options
    def branch: (options) -> Session
              | (options) { (Session) -> Session } -> Session
  end
end
