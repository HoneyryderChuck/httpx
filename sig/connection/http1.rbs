module HTTPX
  class Connection::HTTP1
    include Callbacks
    include Loggable

    attr_reader pending: Array[Request]
    attr_reader requests: Array[Request]

    @options: Options
    @max_concurrent_requests: Integer
    @max_requests: Integer
    @parser: HTTP1
    @buffer: Buffer

    def interests: () -> io_interests?

    def reset: () -> void

    def close: () -> void

    def empty?: () -> bool

    def exhausted?: () -> bool

    def <<: (String) -> void

    def send: (Request) -> void

    def consume: () -> void

    def handle_error: (StandardError ex) -> void

    def on_headers: (Hash[String, Array[String]] headers) -> void

    def on_trailers: (Hash[String, Array[String]] headers) -> void

    def on_data: (string chunk) -> void

    def on_complete: () -> void

    def dispatch: () -> void

    def ping: () -> void

    def timeout: () -> Integer

    private

    def initialize: (Buffer, options) -> untyped

    def manage_connection: (Response) -> void

    def disable: () -> void

    def disable_pipelining: () -> void

    def set_protocol_headers: (Request) -> _Each[headers_key, String]

    def headline_uri: (Request) -> String

    def handle: (Request request) -> void

    def join_headers: (Request request) -> void

    def join_trailers: (Request request) -> void

    def join_headers2: (_Each[headers_key, String] headers) -> void

    def join_body: (Request request) -> void

    def capitalized: (String field) -> String
  end
end