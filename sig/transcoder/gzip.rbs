module HTTPX
  module Transcoder
    module GZIP
      def self?.encode: (_Encoder body) -> Deflater
      def self?.decode: (Response response, ?bytesize: Integer) -> Inflater

      class Deflater < Transcoder::Deflater
        @compressed_chunk: String
        @deflater: Zlib::GzipWriter

        private

        def write: (String chunk) -> void

        def compressed_chunk: () -> String
      end

      class Inflater < Transcoder::Inflater
      end
    end
  end
end
